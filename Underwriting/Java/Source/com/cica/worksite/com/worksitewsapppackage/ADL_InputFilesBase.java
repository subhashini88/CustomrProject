/*
  This class has been generated by the Code Generator
*/

package com.worksitewsapppackage;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.NumberValidator;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;


public abstract class ADL_InputFilesBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    // tags used in the XML document
    public final static String ATTR_FileID = "FileID";
    public final static String ATTR_FileName = "FileName";
    public final static String ATTR_SalesForceContactName = "SalesForceContactName";
    public final static String ATTR_Status = "Status";
    public final static String ATTR_ErrorMessage = "ErrorMessage";
    public final static String ATTR_FileProcessDate = "FileProcessDate";
    public final static String ATTR_FileReceviedDate = "FileReceviedDate";
    public final static String ATTR_Count = "Count";
    public final static String ATTR_ServerPath = "ServerPath";
    public final static String ATTR_FileType = "FileType";
    public final static String ATTR_ADLGroupName = "ADLGroupName";
    public final static String ATTR_ADLGroupNumber = "ADLGroupNumber";
    public final static String ATTR_Run = "Run";
    private final static String REL_ADL_DataAfterCompareObjects = "FK:ADL_InputFiles[FileID]:ADL_DataAfterCompare[FILEID]";
    private final static String REL_UF_DataValuesObjects = "FK:ADL_InputFiles[FileID]:UF_DataValues[FileID]";
    private final static String REL_UFN_DataValuesObjects = "FK:ADL_InputFiles[FileID]:UFN_DataValues[FileID]";
    private final static String REL_UFN_DataValuesObjects1 = "FK:ADL_InputFiles[FileID]:UFN_DataValues[FileID]";
    private static ClassInfo s_classInfo = null;
    public static ClassInfo _getClassInfo()//NOPMD framework ensures this is thread safe
    {
        if ( s_classInfo == null )//NOPMD
        {
            s_classInfo = newClassInfo(ADL_InputFiles.class);
            s_classInfo.setTableName("ADL_InputFiles");
            s_classInfo.setUIDElements(new String[]{ATTR_FileID});
            {
                AttributeInfo ai = new AttributeInfo(ATTR_FileID);
                ai.setJavaName(ATTR_FileID);
                ai.setColumnName(ATTR_FileID);
                ai.setAttributeClass(long.class);
                NumberValidator v = new NumberValidator(ATTR_FileID);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_FileName);
                ai.setJavaName(ATTR_FileName);
                ai.setColumnName(ATTR_FileName);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_FileName);
                v.setMaxLength(255);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_SalesForceContactName);
                ai.setJavaName(ATTR_SalesForceContactName);
                ai.setColumnName(ATTR_SalesForceContactName);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_SalesForceContactName);
                v.setMaxLength(255);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Status);
                ai.setJavaName(ATTR_Status);
                ai.setColumnName(ATTR_Status);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_Status);
                v.setMaxLength(255);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ErrorMessage);
                ai.setJavaName(ATTR_ErrorMessage);
                ai.setColumnName(ATTR_ErrorMessage);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ErrorMessage);
                v.setMaxLength(2147483647);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_FileProcessDate);
                ai.setJavaName(ATTR_FileProcessDate);
                ai.setColumnName(ATTR_FileProcessDate);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_FileProcessDate);
                v.setMaxLength(255);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_FileReceviedDate);
                ai.setJavaName(ATTR_FileReceviedDate);
                ai.setColumnName(ATTR_FileReceviedDate);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_FileReceviedDate);
                v.setMaxLength(255);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Count);
                ai.setJavaName(ATTR_Count);
                ai.setColumnName(ATTR_Count);
                ai.setAttributeClass(long.class);
                NumberValidator v = new NumberValidator(ATTR_Count);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ServerPath);
                ai.setJavaName(ATTR_ServerPath);
                ai.setColumnName(ATTR_ServerPath);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ServerPath);
                v.setMaxLength(255);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_FileType);
                ai.setJavaName(ATTR_FileType);
                ai.setColumnName(ATTR_FileType);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_FileType);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ADLGroupName);
                ai.setJavaName(ATTR_ADLGroupName);
                ai.setColumnName(ATTR_ADLGroupName);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ADLGroupName);
                v.setMaxLength(255);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ADLGroupNumber);
                ai.setJavaName(ATTR_ADLGroupNumber);
                ai.setColumnName(ATTR_ADLGroupNumber);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ADLGroupNumber);
                v.setMaxLength(255);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Run);
                ai.setJavaName(ATTR_Run);
                ai.setColumnName(ATTR_Run);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_Run);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                // relation ADL_DataAfterCompareObjects (FK:ADL_InputFiles[FileID]:ADL_DataAfterCompare[FILEID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_ADL_DataAfterCompareObjects);
                ri.setName("ADL_DataAfterCompareObjects");
                ri.setLocalAttributes(new String[]{ATTR_FileID});
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.worksitewsapppackage.ADL_DataAfterCompare.class);
                ri.setRelatedAttributes(new String[]{"FILEID"});//NOPMD
                ri.setRelatedIdentifier("FK:ADL_DataAfterCompare[FILEID]:ADL_InputFiles[FileID]");
                ri.setLoadMethod("loadADL_DataAfterCompareObjects");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation UF_DataValuesObjects (FK:ADL_InputFiles[FileID]:UF_DataValues[FileID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_UF_DataValuesObjects);
                ri.setName("UF_DataValuesObjects");
                ri.setLocalAttributes(new String[]{ATTR_FileID});
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.worksitewsapppackage.UF_DataValues.class);
                ri.setRelatedAttributes(new String[]{"FileID"});//NOPMD
                ri.setRelatedIdentifier("FK:UF_DataValues[FileID]:ADL_InputFiles[FileID]");
                ri.setLoadMethod("loadUF_DataValuesObjects");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation UFN_DataValuesObjects (FK:ADL_InputFiles[FileID]:UFN_DataValues[FileID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_UFN_DataValuesObjects);
                ri.setName("UFN_DataValuesObjects");
                ri.setLocalAttributes(new String[]{ATTR_FileID});
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.worksitewsapppackage.UFN_DataValues.class);
                ri.setRelatedAttributes(new String[]{"FileID"});//NOPMD
                ri.setRelatedIdentifier("FK:UFN_DataValues[FileID]:ADL_InputFiles[FileID]");
                ri.setLoadMethod("loadUFN_DataValuesObjects");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation UFN_DataValuesObjects1 (FK:ADL_InputFiles[FileID]:UFN_DataValues[FileID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_UFN_DataValuesObjects1);
                ri.setName("UFN_DataValuesObjects1");
                ri.setLocalAttributes(new String[]{ATTR_FileID});
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.worksitewsapppackage.UFN_DataValues.class);
                ri.setRelatedAttributes(new String[]{"FileID"});//NOPMD
                ri.setRelatedIdentifier("FK:UFN_DataValues[FileID]:ADL_InputFiles[FileID]");
                ri.setLoadMethod("loadUFN_DataValuesObjects1");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    public ADL_InputFilesBase(BusObjectConfig config)
    {
        super(config);
    }

    public long getFileID()
    {
        return getLongProperty(ATTR_FileID);
    }

    public void setFileID(long value)
    {
        setProperty(ATTR_FileID, value, 0);
    }

    public String getFileName()
    {
        return getStringProperty(ATTR_FileName);
    }

    public void setFileName(String value)
    {
        setProperty(ATTR_FileName, value, 0);
    }

    public String getSalesForceContactName()
    {
        return getStringProperty(ATTR_SalesForceContactName);
    }

    public void setSalesForceContactName(String value)
    {
        setProperty(ATTR_SalesForceContactName, value, 0);
    }

    public String getStatus()
    {
        return getStringProperty(ATTR_Status);
    }

    public void setStatus(String value)
    {
        setProperty(ATTR_Status, value, 0);
    }

    public String getErrorMessage()
    {
        return getStringProperty(ATTR_ErrorMessage);
    }

    public void setErrorMessage(String value)
    {
        setProperty(ATTR_ErrorMessage, value, 0);
    }

    public String getFileProcessDate()
    {
        return getStringProperty(ATTR_FileProcessDate);
    }

    public void setFileProcessDate(String value)
    {
        setProperty(ATTR_FileProcessDate, value, 0);
    }

    public String getFileReceviedDate()
    {
        return getStringProperty(ATTR_FileReceviedDate);
    }

    public void setFileReceviedDate(String value)
    {
        setProperty(ATTR_FileReceviedDate, value, 0);
    }

    public long getCount()
    {
        return getLongProperty(ATTR_Count);
    }

    public void setCount(long value)
    {
        setProperty(ATTR_Count, value, 0);
    }

    public String getServerPath()
    {
        return getStringProperty(ATTR_ServerPath);
    }

    public void setServerPath(String value)
    {
        setProperty(ATTR_ServerPath, value, 0);
    }

    public String getFileType()
    {
        return getStringProperty(ATTR_FileType);
    }

    public void setFileType(String value)
    {
        setProperty(ATTR_FileType, value, 0);
    }

    public String getADLGroupName()
    {
        return getStringProperty(ATTR_ADLGroupName);
    }

    public void setADLGroupName(String value)
    {
        setProperty(ATTR_ADLGroupName, value, 0);
    }

    public String getADLGroupNumber()
    {
        return getStringProperty(ATTR_ADLGroupNumber);
    }

    public void setADLGroupNumber(String value)
    {
        setProperty(ATTR_ADLGroupNumber, value, 0);
    }

    public String getRun()
    {
        return getStringProperty(ATTR_Run);
    }

    public void setRun(String value)
    {
        setProperty(ATTR_Run, value, 0);
    }

    public BusObjectIterator<ADL_DataAfterCompare> getADL_DataAfterCompareObjects()
    {
        return getMultiRelationObjects(REL_ADL_DataAfterCompareObjects);
    }
    public BusObjectIterator<ADL_DataAfterCompare> loadADL_DataAfterCompareObjects()
    {
        String queryText = "select * from \"ADL_DataAfterCompare\" where \"FILEID\" = :FileID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("FileID", "ADL_DataAfterCompare.FILEID", QueryObject.PARAM_INT, new Long(getFileID()));//NOPMD
        query.setResultClass(ADL_DataAfterCompare.class);
        return query.getObjects();
    }


    public void addADL_DataAfterCompareObject(ADL_DataAfterCompare a_ADL_DataAfterCompare)
    {
        a_ADL_DataAfterCompare.setFILEID(this.getFileID());
    }

    public void removeADL_DataAfterCompareObject(ADL_DataAfterCompare a_ADL_DataAfterCompare)
    {
        a_ADL_DataAfterCompare.setNull("FILEID");//NOPMD
    }

    public UF_DataValues getUF_DataValuesObjectsObject()
    {
        return (UF_DataValues)getSingleRelationObject(REL_UF_DataValuesObjects);
    }
    public UF_DataValues loadUF_DataValuesObjects()
    {
        String queryText = "select * from \"UF_DataValues\" where \"FileID\" = :FileID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("FileID", "UF_DataValues.FileID", QueryObject.PARAM_INT, new Long(getFileID()));//NOPMD
        query.setResultClass(UF_DataValues.class);
        return (UF_DataValues)query.getObject();
    }


    public void setUF_DataValuesObjectsObject(UF_DataValues a_UF_DataValues)
    {
        if (a_UF_DataValues == null)
        {
            this.setNull("FileID");
        }
        else
        {
            this.setFileID(a_UF_DataValues.getFileID());
        }
    }

    public UFN_DataValues getUFN_DataValuesObjectsObject()
    {
        return (UFN_DataValues)getSingleRelationObject(REL_UFN_DataValuesObjects);
    }
    public UFN_DataValues loadUFN_DataValuesObjects()
    {
        String queryText = "select * from \"UFN_DataValues\" where \"FileID\" = :FileID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("FileID", "UFN_DataValues.FileID", QueryObject.PARAM_INT, new Long(getFileID()));//NOPMD
        query.setResultClass(UFN_DataValues.class);
        return (UFN_DataValues)query.getObject();
    }


    public void setUFN_DataValuesObjectsObject(UFN_DataValues a_UFN_DataValues)
    {
        if (a_UFN_DataValues == null)
        {
            this.setNull("FileID");
        }
        else
        {
            this.setFileID(a_UFN_DataValues.getFileID());
        }
    }

    public UFN_DataValues getUFN_DataValuesObjects1Object()
    {
        return (UFN_DataValues)getSingleRelationObject(REL_UFN_DataValuesObjects1);
    }
    public UFN_DataValues loadUFN_DataValuesObjects1()
    {
        String queryText = "select * from \"UFN_DataValues\" where \"FileID\" = :FileID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("FileID", "UFN_DataValues.FileID", QueryObject.PARAM_INT, new Long(getFileID()));//NOPMD
        query.setResultClass(UFN_DataValues.class);
        return (UFN_DataValues)query.getObject();
    }


    public void setUFN_DataValuesObjects1Object(UFN_DataValues a_UFN_DataValues)
    {
        if (a_UFN_DataValues == null)
        {
            this.setNull("FileID");
        }
        else
        {
            this.setFileID(a_UFN_DataValues.getFileID());
        }
    }



    public static com.worksitewsapppackage.ADL_InputFiles getADL_InputFilesObject(long FileID)
    {
        String queryText = "select * from \"ADL_InputFiles\" where \"FileID\" = :FileID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("FileID", "ADL_InputFiles.FileID", QueryObject.PARAM_INT, new Long(FileID));//NOPMD
        query.setResultClass(ADL_InputFiles.class);
        return (ADL_InputFiles)query.getObject();
    }

    public static BusObjectIterator<com.worksitewsapppackage.ADL_InputFiles> getADL_InputFilesObjects(long fromFileID, long toFileID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"ADL_InputFiles\" where \"FileID\" between :fromFileID and :toFileID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromFileID", "ADL_InputFiles.FileID", QueryObject.PARAM_INT, new Long(fromFileID));
        query.addParameter("toFileID", "ADL_InputFiles.FileID", QueryObject.PARAM_INT, new Long(toFileID));
        query.setResultClass(ADL_InputFiles.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.worksitewsapppackage.ADL_InputFiles> getADL_InputFilesObjects(long fromFileID, long toFileID)
    {
        String queryText = "select * from \"ADL_InputFiles\" where \"FileID\" between :fromFileID and :toFileID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromFileID", "ADL_InputFiles.FileID", QueryObject.PARAM_INT, new Long(fromFileID));
        query.addParameter("toFileID", "ADL_InputFiles.FileID", QueryObject.PARAM_INT, new Long(toFileID));
        query.setResultClass(ADL_InputFiles.class);
        return query.getObjects();
    }



    public static BusObjectIterator<com.worksitewsapppackage.ADL_InputFiles> getNextADL_InputFilesObjects(long FileID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"ADL_InputFiles\" where (\"FileID\" > :FileID) order by \"FileID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("FileID", "ADL_InputFiles.FileID", QueryObject.PARAM_INT, new Long(FileID));//NOPMD
        query.setResultClass(ADL_InputFiles.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.worksitewsapppackage.ADL_InputFiles> getPreviousADL_InputFilesObjects(long FileID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"ADL_InputFiles\" where (\"FileID\" < :FileID) order by \"FileID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("FileID", "ADL_InputFiles.FileID", QueryObject.PARAM_INT, new Long(FileID));//NOPMD
        query.setResultClass(ADL_InputFiles.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

}
