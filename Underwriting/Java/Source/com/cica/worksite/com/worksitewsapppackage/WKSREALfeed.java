/*
  This class has been generated by the Code Generator
*/

package com.worksitewsapppackage;


import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import java.util.*;
import com.cordys.cpc.bsf.busobject.BSF;

public class WKSREALfeed extends WKSREALfeedBase
{
    public WKSREALfeed()
    {
        this((BusObjectConfig)null);
    }

    public WKSREALfeed(BusObjectConfig config)
    {
        super(config);
    }
public static com.worksitewsapppackage.WKSREALfeed getWKSREALfeedByApplicationNumber(String ApplicationNbr,String BatchNumber)
    {
		String queryText = "select * from \"WKSREALfeed\" where \"ApplicationNbr\"=:ApplicationNbr and BatchNumber=:BatchNumber";
        QueryObject query = new QueryObject(queryText);
		query.addParameter("ApplicationNbr", "WKSREALfeed.ApplicationNbr", QueryObject.PARAM_STRING, ApplicationNbr);
		query.addParameter("BatchNumber", "WKSREALfeed.BatchNumber", QueryObject.PARAM_STRING, BatchNumber);
        query.setResultClass(WKSREALfeed.class);
        return (WKSREALfeed)query.getObject();
    }
public static BusObjectIterator<com.worksitewsapppackage.WKSREALfeed> getAllWKSREALfeedUnprocessdData()
    {
        String queryText = "select top(200) * from \"WKSREALfeed\" where WIMSProcessedtime is  null or WIMSProcessedtime='' and CurrentAction in('PENDING','JET ISSUED','ISSUED','REJECTED')";
        QueryObject query = new QueryObject(queryText);
        query.setResultClass(WKSREALfeed.class);
        return query.getObjects();
    }
	protected void onBeforeInsert()
{
String userDN = BSF.getUser();
this.setCreatedOn(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60 * 1000)));
this.setCreatedBy(userDN.substring(3,userDN.indexOf(",")));
}
protected void onBeforeUpdate()
{
String userDN = BSF.getUser();
this.setUpdatedOn(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60 * 1000)));
this.setUpdatedBy(userDN.substring(3,userDN.indexOf(",")));
}
}
