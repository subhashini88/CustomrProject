/*
  This class has been generated by the Code Generator
*/

package com.worksitewsapppackage;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.eibus.xml.nom.Document;
import com.eibus.xml.nom.Node;
import com.eibus.xml.xpath.XPath;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import com.eibus.util.Base64;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.Certificate;
import java.io.*;
import java.net.HttpURLConnection;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLPeerUnverifiedException;
import java.net.URL;
import java.nio.charset.Charset;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.Properties;
import java.util.TimeZone;
import com.eibus.xml.nom.Document;
import com.eibus.xml.nom.Node;
import com.eibus.xml.nom.XMLException;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.net.InetSocketAddress;
import java.net.MalformedURLException;
import java.net.Proxy;

import com.eibus.xml.nom.XMLException;

public class WorkSiteAuth extends WorkSiteAuthBase
{
    public WorkSiteAuth()
    {
        this((BusObjectConfig)null);
    }

    public WorkSiteAuth(BusObjectConfig config)
    {
        super(config);
    }

     public static String getSMALartToken(String username, String password) throws Exception
    {
    String SOAPReq="";
    SOAPReq = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"+
           "<SOAP:Header>"+
           "<wsse:Security xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\">"+
           "<wsse:UsernameToken xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\">"+
           "<wsse:Username>"+username+"</wsse:Username>"+
           "<wsse:Password>"+password+"</wsse:Password>"+
           "</wsse:UsernameToken>"+
           " </wsse:Security>"+
           "<i18n:international xmlns:i18n=\"http://www.w3.org/2005/09/ws-i18n\">"+
           "<i18n:locale>en-US</i18n:locale>"+
           "</i18n:international>"+
           "</SOAP:Header>"+
           "<SOAP:Body>"+
           "<samlp:Request xmlns:samlp=\"urn:oasis:names:tc:SAML:1.0:protocol\" MajorVersion=\"1\" MinorVersion=\"1\" IssueInstant=\"2020-09-28T10:45:48Z\" RequestID=\"a91fc8f99-3bdc-498d-8a26-463c77f05df4\">"+
           "<samlp:AuthenticationQuery>"+
           "<saml:Subject xmlns:saml=\"urn:oasis:names:tc:SAML:1.0:assertion\">"+
           "<saml:NameIdentifier Format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\">"+username+"</saml:NameIdentifier>"+
           "</saml:Subject>"+
           "</samlp:AuthenticationQuery>"+
           "</samlp:Request>"+
           "</SOAP:Body>"+
    "</SOAP:Envelope>";

    String SOAPResp = null;
    		try {
    			SOAPResp = executeSOAP(SOAPReq,"http://nausd-wapp0101:81/home/uw_dev/com.eibus.web.soap.Gateway.wcp?organization=o=uw_dev,cn=cordys,cn=awDev101,o=aceins.com");
    		} catch (Exception e) {
    			// TODO Auto-generated catch block
    			SOAPResp = "invalid session. Error Details : " +e;
    			//logger.error("The error occurred in the createZuotaExport method-->", e);
    		} 

    		
//return SOAPResp;
String substr = "<samlp:AssertionArtifact xmlns:samlp=\"urn:oasis:names:tc:SAML:1.0:protocol\">";
String before = SOAPResp.substring(SOAPResp.indexOf(substr),SOAPResp.length()-1);
String Substr1 = "protocol\">";
String before1 = before.substring(before.indexOf(Substr1),before.length()-1);

String lastStr= "</samlp:AssertionArtifact>";

String after = before1.substring(before1.indexOf(">")+1,before1.indexOf(lastStr));
return after   ;

	}
	
	 public static String executeSOAP(String SOAPReq, String endpoint) throws Exception
    		{
    		  StringBuilder sb = null;
    		  InputStreamReader read = null;
    		  HttpURLConnection rc = null;
    		  
    		  URL url = new URL( endpoint ); 
            //  SSLContext sslContext = SSLContext.getInstance("TLSv1.2"); 
    	    // sslContext.init(null, null, null); 
    	             
    	      rc = (HttpURLConnection)url.openConnection(); 
    	    //  rc.setSSLSocketFactory(sslContext.getSocketFactory()); 
    	             
    	      rc.setRequestMethod("GET"); 
    	      rc.setDoOutput( true ); 
    	      rc.setDoInput( true ); 
    	      rc.setRequestProperty( "Content-Type", "text/xml; charset=utf-8" ); 
    	        
    	      int len = SOAPReq.length(); 
    	      rc.setRequestProperty( "Content-Length", Integer.toString( len ) ); 
    	      rc.connect();     
    	      OutputStreamWriter out = new OutputStreamWriter( rc.getOutputStream() ); 
    	      out.write( SOAPReq, 0, len ); 
    	      out.flush(); 
    	      read = new InputStreamReader( rc.getInputStream() ); 
    	      sb = new StringBuilder();   
    	      int ch = read.read(); 
    	      while( ch != -1 )
    	      { 
    	          sb.append((char)ch); 
    	          ch = read.read(); 
    	      }

    	  			read.close(); 
                    rc.disconnect();

    			return sb.toString();
    		}

    public static BusObjectIterator<com.worksitewsapppackage.WorkSiteAuth> getWorkSiteAuthObjects(com.cordys.cpc.bsf.query.Cursor cursor)
    {
        // TODO implement body
        return null;
    }

    public void onInsert()
    {
    }

    public void onUpdate()
    {
    }

    public void onDelete()
    {
    }

}
