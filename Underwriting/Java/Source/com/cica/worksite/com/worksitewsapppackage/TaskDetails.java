/*
  This class has been generated by the Code Generator
*/

package com.worksitewsapppackage;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.*;
import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.busobject.DMLStatement;
import com.cordys.cpc.bsf.busobject.BSF;
import java.util.Calendar;
import java.text.DateFormat;

public class TaskDetails extends TaskDetailsBase
{
    public TaskDetails()
    {
        this((BusObjectConfig)null);
    }

    public TaskDetails(BusObjectConfig config)
    {
        super(config);
    }

    public static com.worksitewsapppackage.TaskDetails getTaskDetails(String TaskInstanceId)
    {
       String queryText="select * from TaskDetails where TaskInstanceId = :TaskInstanceId"; 

	QueryObject queryTaskDetails = new QueryObject(queryText);
                queryTaskDetails.addParameter("TaskInstanceId", "TaskDetails.TaskInstanceId", QueryObject.PARAM_STRING, TaskInstanceId);
                queryTaskDetails.setResultClass(TaskDetails.class);
                return (TaskDetails)queryTaskDetails.getObject();
    }
	
    public static BusObjectIterator<com.worksitewsapppackage.TaskDetails> getTaskDetailsUsingstatus(String TaskStatus)
    {
       String queryText="select * from TaskDetails where TaskStatus = 'Saved'"; 
       QueryObject query = new QueryObject(queryText);
       query.setResultClass(TaskDetails.class);
       return query.getObjects();
    }
    public static BusObjectIterator<com.worksitewsapppackage.TaskDetails> getTaskdetailsByDueDate(String TaskName , String TeamName)
    {
    	String pattern = "yyyy-MM-dd";
		String todaydate =new SimpleDateFormat(pattern).format(new Date());
        String queryText = "select * from TaskDetails where TeamName in ('Group Underwriting','Shared Services') and DueDate = '"+todaydate+"' and TaskStatus != 'Transferred'";
        QueryObject query = new QueryObject(queryText);
        query.setResultClass(TaskDetails.class);
        return query.getObjects();
    }
	 public static int updateTaskDetailsUsingTaskID(String task_Inst_id, String reqType, String status, String tfdate)
    {
        DMLStatement dml = null;
		String queryText="update TaskDetails set ReqType='"+reqType+"',TaskStatus='"+status+"'";
if(tfdate != null && !tfdate.trim().isEmpty() )
queryText=queryText+",DueDate='"+tfdate+"'";
queryText=queryText+" where TaskInstanceId='"+task_Inst_id+"'";
		dml = new DMLStatement(queryText);
		dml.execute();
		return (int)1;
    }

  public static BusObjectIterator<com.worksitewsapppackage.TaskDetails> getTaskDetailsByLinkedTaskID(String TaskID)
    {
        String queryText = "select * from \"TaskDetails\" where \"linkedTaskId\" = :TaskID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("TaskID", "TaskDetails.linkedTaskId", QueryObject.PARAM_STRING, TaskID);       
        query.setResultClass(TaskDetails.class);
        return query.getObjects();
    }
 public static BusObjectIterator<com.worksitewsapppackage.TaskDetails> GetPendingDeductionTask()
    {
       String queryText="select * from TaskDetails TD join WKSOpsCase OPS on TD.CaseId=OPS.CaseInstance where TD.TeamName='Send Deduction File' and TD.TaskName='Alert' and TD.Reason='Task Created Pending' and TD.MasterAppNumber=OPS.ApplicationType"; 
       QueryObject query = new QueryObject(queryText);
       query.setResultClass(TaskDetails.class);
       return query.getObjects();
    }
public static String AddBuisnessDays(String StartDate,int NoOfBusinessDays)
	{
String result="";
try {
  int j = 0;
		Calendar cal = Calendar.getInstance();
		String str_date = StartDate;

DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
Date date = formatter.parse(str_date);

	
		cal.setTime(date);
		int currentDay=0;
        //String str = "";
String duration="";
		for(int i =0;i<NoOfBusinessDays;)
	{
		cal.add(Calendar.DAY_OF_MONTH,1);
		 currentDay = cal.get(Calendar.DAY_OF_WEEK);
		if(currentDay == Calendar.SUNDAY || currentDay == Calendar.SATURDAY)
		{
			//System.out.println(cal.getTime());
			//System.out.println("currentday "+ currentDay);
		}
		else 
		{
			//System.out.println(currentDay);
			//System.out.println("weekNoofbusinessdays"+cal.getTime());
			//str = str+cal.getTime()+",";
			i++;
           //System.out.println(i);
		}
		j++;
	}
			duration=(j>0)?"P"+j+"D":"";		

	Date Cdate=cal.getTime(); 
   DateFormat s=new SimpleDateFormat("yyyy-MM-dd");
    //System.out.println(s.format(Cdate));
	result= s.format(Cdate);
	
   
   
}
catch (Exception e) {
 //The handling for the code
}
return result;
}
protected void onBeforeInsert()
{
String userDN = BSF.getUser();
this.setCreatedDate(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60 * 1000)));
//this.setCreatedBy(userDN.substring(3,userDN.indexOf(",")));
this.setUpdatedBy(userDN.substring(3,userDN.indexOf(",")));
}
protected void onBeforeUpdate()
{
String userDN = BSF.getUser();
this.setUpdatedDate(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60 * 1000)));
this.setUpdatedBy(userDN.substring(3,userDN.indexOf(",")));
}

}

