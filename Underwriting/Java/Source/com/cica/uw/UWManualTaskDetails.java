/*
  This class has been generated by the Code Generator
*/

package com.cica.uw;
import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.busobject.exception.BsfConstraintViolationException;
import com.eibus.xml.nom.Document;
import com.eibus.xml.nom.Node;
import com.eibus.xml.nom.XMLException;
import com.eibus.xml.xpath.XPath;
import com.cordys.cpc.bsf.busobject.BSF;


public class UWManualTaskDetails extends UWManualTaskDetailsBase
{
    public UWManualTaskDetails()
    {
        this((BusObjectConfig)null);
    }

    public UWManualTaskDetails(BusObjectConfig config)
    {
        super(config);
    }

    public static com.cica.uw.UWManualTaskDetails getUWManualTaskDetailObjectByCaseID(String CaseID)
    {
        String queryText = "select * from \"UWManualTaskDetails\" where \"CaseID\" = :CaseID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CaseID", "UWManualTaskDetails.CaseID", QueryObject.PARAM_STRING, CaseID);//NOPMD
        query.setResultClass(UWManualTaskDetails.class);
        return (UWManualTaskDetails)query.getObject();
    }

public static BusObjectIterator<com.cica.uw.UWManualTaskDetails> getRecordForInterDept()
	    {
	        String queryText = "select * from UWManualTaskDetails where Status='Created' and SourceWorkList!='UW'";
	       QueryObject query = new QueryObject(queryText);
	 query.setResultClass(UWManualTaskDetails.class);
	        return query.getObjects();
	    }

public static  com.cica.uw.UWManualTaskDetails getRecordByTaskInstanceId(String TaskID)
	    {
	        String queryText = "select A.SNo as ManualTaskId, B.PITaskId as UWPITaskID,* from UWManualTaskDetails A left join tblUWPI_TaskDetails B on A.TaskInstanceID=B.TaskInstanceId where A.TaskInstanceID='"+TaskID+"'";
	       QueryObject query = new QueryObject(queryText);
       // query.addParameter("CaseID", "UWManualTaskDetails.CaseID", QueryObject.PARAM_STRING, CaseID);//NOPMD
        query.setResultClass(UWManualTaskDetails.class);
        return (UWManualTaskDetails)query.getObject();
	    }

public static  BusObjectIterator<com.cica.uw.UWManualTaskDetails> GetTaskInPendingWorkListComplete()
	{
	   String queryText = "select SNO,CaseID,TaskInstanceID from UWManualTaskDetails where SNO in \r\n" + 
	   		"(select Dependent_SNO from UWManualTaskDetails where Status='Completed' and Dependent_SNO is not null ) and Status='In Pending Worklist'";
	   QueryObject query = new QueryObject(queryText);
	   // query.addParameter("CaseID", "UWManualTaskDetails.CaseID", QueryObject.PARAM_STRING, CaseID);//NOPMD
	   query.setResultClass(UWManualTaskDetails.class);
	   return query.getObjects();
	}
	
	public static int getUWManualTaskNotesObject(int SNO)
    {
        String queryText = "select * from UWManualTaskDetails where SNO =:SNO";
	QueryObject query = new QueryObject(queryText);
	query.addParameter("SNO", "UWManualTaskDetails.SNO",QueryObject.PARAM_INT,SNO);
	query.setResultClass(UWManualTaskDetails.class);
	String note = query.getObject().getStringProperty("Notes");
	int resp=0;
	try 
		{
			resp = BSF.getXMLDocument().parseString(note);
		}
	catch (Exception e) 
		{
			e.printStackTrace();
		}
	return resp;

    }
public static String getAllNotes(int manualSNO) {
		
		UWManualTaskDetails obj = UWManualTaskDetails.getUWManualTaskDetailsObject(manualSNO);
		String notes = obj.getStringProperty("Notes"),FinalNotes="";
		int noteNOde = 0,response1[]= {};
		try {
		noteNOde = BSF.getXMLDocument().parseString(notes);
		}catch(Exception e) {
			throw new BsfConstraintViolationException("Exception -"+e.getMessage());
		}
		response1  = XPath.getMatchingNodes("//Note/Notes", null, noteNOde);
		
		for(int i=0;i<response1.length;i++) {
			if(i==0)
				FinalNotes = Node.getData(Node.getElement(response1[i], "notes"));
			else 
			FinalNotes = FinalNotes+" "+Node.getData(Node.getElement(response1[i], "notes"));
		}
		
		//
		return FinalNotes;
	}

}
