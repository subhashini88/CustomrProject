/*
  This class has been generated by the Code Generator
*/

package com.cica.uw;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObject;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.soap.SOAPRequestObject;
import com.eibus.util.logger.CordysLogger;
import com.eibus.util.logger.Severity;
import com.eibus.xml.nom.Document;
import com.eibus.xml.nom.Node;
import com.eibus.xml.xpath.XPath;
import java.util.UUID;
import org.w3c.dom.CDATASection;
import javax.xml.soap.SOAPElement;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.busobject.DMLStatement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.DateFormat;
import java.util.Calendar;
import org.json.JSONObject;
import org.json.JSONArray;
import org.json.JSONTokener;
import org.json.XML;
import com.eibus.xml.nom.Document;
import com.cordys.cpc.bsf.busobject.BSF;
import com.eibus.xml.nom.Node;
import com.eibus.xml.xpath.XPath;
import com.cordys.cpc.bsf.busobject.exception.BsfConstraintViolationException;

public class Util extends UtilBase
{
    public Util()
    {
        this((BusObjectConfig)null);
    }

    public Util(BusObjectConfig config)
    {
        super(config);
    }
static   CordysLogger logger = CordysLogger.getCordysLogger(Util.class);
//private static CordysLogger logger=CordysLogger.getCordysLogger(Util.class);	


    public static String PlanActivity(String caseinstanceid, String activity, String activityName, String humanTaskModelId, String subject, String assignee, String principal, String assignToUser, String dueDate, String deliveryModelName, String targetType, String priority)
    {
    	String reqXML="<planactivities>"
    			+"            <activity id=\""+activity+"\" name=\""+activityName+"\">"
    			+"               <case:activity xmlns:case=\"http://schemas.cordys.com/casemanagement/1.0\" xmlns=\"\" xmlns:ns=\"http://schemas.cordys.com/phs/1.0\" xmlns:ns1=\"http://schemas.cordys.com/1.0/xforms/processapi\" xmlns:ns10=\"http://schemas.cordys.com/bpm/instance/1.0\" xmlns:ns11=\"http://schemas.cordys.com/notification/ws-humantask/execution/2.0\" xmlns:ns12=\"http://schemas.cordys.com/phs/1.0\" xmlns:ns13=\"http://schemas.cordys.com/PHS_x0020_Database_x0020_Metadata\" xmlns:ns2=\"http://schemas.cordys.com/PHSDatabaseMetadata\" xmlns:ns3=\"http://schemas.cordys.com/General/1.0/\" xmlns:ns4=\"http://schemas.cordys.com/notification/workflow/1.0\" xmlns:ns5=\"http://schemas.cordys.com/dropdown_table\" xmlns:ns6=\"http://schemas.cordys.com/\" xmlns:ns7=\"http://schemas.cordys.com/General/ClientAttributes/\" xmlns:ns8=\"http://schemas.cordys.com/default\" xmlns:ns9=\"http://schemas.cordys.com/bpm/execution/1.0\" xmlns:sm=\"http://www.w3.org/2005/07/scxml\" id=\""+activityName+"\" name=\""+activityName+"\" type=\"HUMANTASK\">"
    			+"                  <case:implementation>"
    			+"                     <HumanInteraction xmlns=\"http://schemas.cordys.com/notification/workflow/1.0\">"
    			+"                        <HumanTaskModelId>"+humanTaskModelId+"</HumanTaskModelId>"
    			+"                        <Subject>"+subject+"</Subject>"
    			+"                        <Priority source=\"asInMainCase\">"+priority+"</Priority>"
    			+"                        <SendTo>"
    			+"                           <Target type=\""+targetType+"\">"
    			+"                              <Assignee dynamic=\"false\">"+assignee+"</Assignee>"
    			+"                           </Target>"
    			+"                           <ExecutionPolicy>"
    			+"                              <Entry>"
    			+"                                 <Principal type=\"role\">"+principal+"</Principal>"
    			+"                                 <Privilege>view</Privilege>"
    			+"                                 <Privilege>execute</Privilege>"
    			+"                              </Entry>"
    			+"                           </ExecutionPolicy>";
    	
    	
    		if(assignToUser != null && !assignToUser.isEmpty())
    		{
    			reqXML +="                           <AssignToUser type=\"ASSIGN\">"+assignToUser+"</AssignToUser>";
    		}
    			reqXML +="                        </SendTo>";
    		if(dueDate != null && !dueDate.isEmpty())
    		{
    	    	reqXML +="  <DueDate isDuration=\"true\" dynamic=\"false\">"+dueDate+"</DueDate>";
    		}
    			reqXML +="                     </HumanInteraction>"
    			+"                  </case:implementation>"
    			+"                  <case:messages>"
    			+"                     <case:input>"
    			+"                        <case:message name=\""+deliveryModelName+"\" xmlns:ns=\"http://schemas.cordys.com/1.0/xforms/processapi\">"
    			+"                        </case:message>"
    			+"                     </case:input>"
    			+"                  </case:messages>"
    			+"                  <case:associatedevents />"
    			+"                  <case:escalation />"
    			+"               </case:activity>"
    			+"            </activity>"
    			+"         </planactivities>";
    	
    	Document doc = new Document();
    	int reqNode=0;
    	try {
    		reqNode = doc.parseString(reqXML);
    	} catch (Exception e) {
    		// TODO Auto-generated catch block
    		e.printStackTrace();
    		logger.log(Severity.ERROR, "Exception Error Request" + e.getMessage());
    	} 
    	String[] parameterName = {"caseinstanceid"};
    	String[] parameterValue = {caseinstanceid};
    	SOAPRequestObject sro=new SOAPRequestObject ("http://schemas.cordys.com/casemanagement/execution/1.0","PlanActivities", parameterName, parameterValue) ;
    	
    	sro.addParameterAsXml(reqNode);
    	logger.log(Severity.ERROR,"Plan Acitivity: "+Node.writeToString(reqNode, true));
    	int response = sro.execute();
    	return Node.writeToString(response, true);
    }

    public static String PostIssuePlanActivity(String caseinstanceid, String activity, String activityName, String humanTaskModelId, String subject, String assignee, String principal, String assignToUser, String dueDate, String deliveryModelName, String targetType, String priority, int preassignments, String InboxModelId)
    {
    		String reqXML="<planactivities>"
+"<activity id=\""+activity+"\" name=\""+activityName+"\">"			
/*+ "<case:activity xmlns:ns3=\"http://schemas.cordys.com/uw/dataservices/1.0\" xmlns:ns4=\"http://schemas.cordys.com/\" xmlns:ns1=\"http://schemas.cordys.com/1.0/xforms/processapi\" xmlns:ns2=\"http://schemas.cordys.com/General/1.0/\" xmlns:ns5=\"http://schemas.cordys.com/General/ClientAttributes/\" xmlns:sm=\"http://www.w3.org/2005/07/scxml\" xmlns:case=\"http://schemas.cordys.com/casemanagement/1.0\" xmlns=\"\" id=\""+activity+"\" name=\""+activityName+"\" type=\"HUMANTASK\">"*/
+"<case:activity xmlns:case=\"http://schemas.cordys.com/casemanagement/1.0\" xmlns=\"\" xmlns:ns1=\"http://schemas.cordys.com/1.0/xforms/processapi\" xmlns:ns2=\"http://schemas.cordys.com/General/1.0/\" xmlns:ns3=\"http://schemas.cordys.com/uw/dataservices/1.0\" xmlns:ns4=\"http://schemas.cordys.com/\" xmlns:ns5=\"http://schemas.cordys.com/General/ClientAttributes/\" xmlns:ns6=\"http://schemas.cordys.com/dataservices/uw/1.0\" xmlns:ns7=\"http://schemas.cordys.com/1.0/xmlstore\" xmlns:sm=\"http://www.w3.org/2005/07/scxml\" id=\""+activity+"\" name=\""+activityName+"\"  type=\"HUMANTASK\">"
               +"   <case:implementation>"
               +"      <HumanInteraction xmlns=\"http://schemas.cordys.com/notification/workflow/1.0\">"
               +"         <HumanTaskModelId>"+humanTaskModelId+"</HumanTaskModelId>"
               +"         <Subject>"+subject+"</Subject>"
               +"         <Priority source=\"asInMainCase\">"+priority+"</Priority>"
               +"         <SendTo>"
               +"            <Target type=\""+targetType+"\">"
               +"               <Assignee dynamic=\"false\">"+assignee+"</Assignee>"
               +"            </Target>"
                           /*<ExecutionPolicy>
                              <Entry>
                                 <Principal type="role">cn=everyone,cn=Cordys ESBServer,cn=cordys,cn=awDev101,o=aceins.com</Principal>
                                 <Privilege>view</Privilege>
                                 <Privilege>execute</Privilege>
                              </Entry>
                           </ExecutionPolicy> 
                           <AssignToUser type="ASSIGN">assignToUser</AssignToUser> */
               +"        </SendTo>"
               +"        <DueDate isDuration=\"true\" dynamic=\"false\">"+dueDate+"</DueDate>"
               +"     </HumanInteraction>"
               +"  </case:implementation>"
               +"  <case:messages>"
               +"     <case:input>"
               +"        <case:message ns=\"http://schemas.cordys.com/1.0/xforms/processapi\" name=\""+deliveryModelName+"\" />"
               +"     </case:input>"
               +"  </case:messages>"
+ "<case:associatedevents><case:event name=\"Closed\" description=\"Closed\"/></case:associatedevents>"
/*               +"  <case:associatedevents />"*/
               +"  <case:duedate type=\"duration\" dynamic=\"false\">"+dueDate+"</case:duedate>"
+"<case:calender dynamic=\"false\" calculationEndsOn=\"endOfBusinessDay\" includeStartDay=\"false\">005056A2-27FA-A1E8-98C8-D8B169724120</case:calender>"
       /*     +"  <case:calender dynamic=\"false\" calculationEndsOn=\"endOfBusinessDay\" includeStartDay=\"false\">005056A2-27FA-A1E9-806D-49C81A6B4141</case:calender>"*/
               +"  <case:escalation />"
			   +   Node.writeToString(XPath.getFirstMatch(".//*[local-name()='preassignment']", null, preassignments),true)
			   +"               </case:activity>"
    		   +"            </activity>"
    		   +"         </planactivities>";
    	
    	Document doc = new Document();
    	int reqNode=0;
    	try {
    		reqNode = doc.parseString(reqXML);
    	} catch (Exception e) {
    		// TODO Auto-generated catch block
    		e.printStackTrace();
    		logger.log(Severity.ERROR, "Exception Error Request" + e.getMessage());
    	} 
    	String[] parameterName = {"caseinstanceid"};
    	String[] parameterValue = {caseinstanceid};
    	SOAPRequestObject sro=new SOAPRequestObject ("http://schemas.cordys.com/casemanagement/execution/1.0","PlanActivities", parameterName, parameterValue) ;
    	
    	sro.addParameterAsXml(reqNode);
    	logger.log(Severity.ERROR,"Plan Activity: "+Node.writeToString(reqNode, true));
    	int response = sro.execute();
    	return Node.writeToString(response, true);
    }

    public static String UnderwritingPlanActivity(String caseinstanceid, String activity, String activityName, String humanTaskModelId, String subject, String assignee, String principal, String assignToUser, String dueDate, String deliveryModelName, String targetType, String priority, int preassignments, String InboxModelId)
    {
    		String reqXML="<planactivities>"
            +"<activity id=\""+activity+"\" name=\""+activityName+"\">"
               /*+"<case:activity xmlns:case=\"http://schemas.cordys.com/casemanagement/1.0\" xmlns=\"\" xmlns:ns=\"http://schemas.cica.com/casedata/1.0\" xmlns:ns1=\"http://schemas.cordys.com/1.0/xforms/processapi\" xmlns:ns10=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:ns11=\"http://schemas.cica.com/casedata/1.0\" xmlns:ns12=\"http://schemas.cordys.com/bpm/instance/1.0\" xmlns:ns13=\"http://schemas.cordys.com/notification/workflow/1.0\" xmlns:ns14=\"http://schemas.cordys.com/casemanagement/execution/1.0\" xmlns:ns15=\"http://schemas.cordys.com/bpm/execution/1.0\" xmlns:ns16=\"http://schemas.cordys.com/default\" xmlns:ns17=\"http://schemas.cordys.com/VendorOrderRequirement\" xmlns:ns18=\"http://schemas.cordys.com/notification/ws-humantask/execution/2.0\" xmlns:ns19=\"http://schemas.cordys.com/default_005056A2-27FA-A1E8-B219-DC47FD4A013B\" xmlns:ns2=\"http://schemas.cordys.com/uw/dataservices/1.0\" xmlns:ns20=\"http://schemas.cordys.com/1.0/ldap\" xmlns:ns21=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\" xmlns:ns22=\"http://schemas.datacontract.org/2004/07/UnderwritingService\" xmlns:ns23=\"http://schemas.cordys.com/NonVendorOrderRequirement\" xmlns:ns24=\"http://schemas.cordys.com/CanadaNonVendorRequirement\" xmlns:ns25=\"http://schemas.cordys.com/CanadaVendorOrderReq\" xmlns:ns3=\"http://schemas.cordys.com/\" xmlns:ns4=\"http://schemas.cordys.com/dataservices/uw/1.0\" xmlns:ns5=\"http://schemas.cordys.com/General/1.0/\" xmlns:ns6=\"http://schemas.cordys.com/General/ClientAttributes/\" xmlns:ns7=\"http://schemas.cordys.com/1.0/xmlstore\" xmlns:ns8=\"http://tempuri.org/\" xmlns:ns9=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:sm=\"http://www.w3.org/2005/07/scxml\" id=\""+activity+"\" name=\""+activityName+"\" type=\"HUMANTASK\">" */
			   +"<case:activity xmlns:ns=\"http://schemas.cica.com/casedata/1.0\" xmlns:ns25=\"http://schemas.cordys.com/buscalendar/runtime/BusinessCalendar/1.0\" xmlns:ns26=\"http://schemas.cordys.com/CanadaVendorOrderRequirement\" xmlns:ns21=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\" xmlns:ns22=\"http://schemas.datacontract.org/2004/07/UnderwritingService\" xmlns:ns23=\"http://schemas.cordys.com/NonVendorOrderRequirement\" xmlns:ns24=\"http://schemas.cordys.com/CanadaNonVendorRequirement\" xmlns:ns20=\"http://schemas.cordys.com/1.0/ldap\" xmlns:ns18=\"http://schemas.cordys.com/notification/ws-humantask/execution/2.0\" xmlns:ns19=\"http://schemas.cordys.com/default_005056A2-27FA-A1E8-B219-DC47FD4A013B\" xmlns:ns14=\"http://schemas.cordys.com/casemanagement/execution/1.0\" xmlns:ns15=\"http://schemas.cordys.com/bpm/execution/1.0\" xmlns:ns16=\"http://schemas.cordys.com/default\" xmlns:ns17=\"http://schemas.cordys.com/VendorOrderRequirement\" xmlns:ns10=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:ns11=\"http://schemas.cica.com/casedata/1.0\" xmlns:ns12=\"http://schemas.cordys.com/bpm/instance/1.0\" xmlns:ns9=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:ns13=\"http://schemas.cordys.com/notification/workflow/1.0\" xmlns:ns7=\"http://schemas.cordys.com/1.0/xmlstore\" xmlns:ns8=\"http://tempuri.org/\" xmlns:ns5=\"http://schemas.cordys.com/General/1.0/\" xmlns:ns6=\"http://schemas.cordys.com/General/ClientAttributes/\" xmlns:ns3=\"http://schemas.cordys.com/\" xmlns:ns4=\"http://schemas.cordys.com/dataservices/uw/1.0\" xmlns:ns1=\"http://schemas.cordys.com/1.0/xforms/processapi\" xmlns:ns2=\"http://schemas.cordys.com/uw/dataservices/1.0\" xmlns:sm=\"http://www.w3.org/2005/07/scxml\" xmlns:case=\"http://schemas.cordys.com/casemanagement/1.0\" xmlns=\"\" id=\""+activity+"\" name=\""+activityName+"\" type=\"HUMANTASK\">"
               +"   <case:implementation>"
               +"      <HumanInteraction xmlns=\"http://schemas.cordys.com/notification/workflow/1.0\">"
               +"         <HumanTaskModelId>"+humanTaskModelId+"</HumanTaskModelId>"
               +"         <Subject>"+subject+"</Subject>"
               +"         <Priority source=\"asInMainCase\">"+priority+"</Priority>"
               +"         <SendTo>"
               +"            <Target type=\""+targetType+"\">"
               +"               <Assignee dynamic=\"false\">"+assignee+"</Assignee>"
               +"            </Target>"
                           /*<ExecutionPolicy>
                              <Entry>
                                 <Principal type="role">cn=everyone,cn=Cordys ESBServer,cn=cordys,cn=awDev101,o=aceins.com</Principal>
                                 <Privilege>view</Privilege>
                                 <Privilege>execute</Privilege>
                              </Entry>
                           </ExecutionPolicy> 
                           <AssignToUser type="ASSIGN">assignToUser</AssignToUser> */
               +"        </SendTo>"
               +"        <DueDate isDuration=\"true\" dynamic=\"false\">"+dueDate+"</DueDate>"
               +"     </HumanInteraction>"
               +"  </case:implementation>"
               +"  <case:messages>"
               +"     <case:input>"
               +"        <case:message ns=\"http://schemas.cordys.com/1.0/xforms/processapi\" name=\""+deliveryModelName+"\" />"
               +"     </case:input>"
               +"  </case:messages>"
               +"  <case:associatedevents />"
               +"  <case:duedate type=\"duration\" dynamic=\"false\">"+dueDate+"</case:duedate>"
               +"  <case:calender dynamic=\"false\" calculationEndsOn=\"endOfBusinessDay\" includeStartDay=\"false\">005056A2-27FA-A1E9-806D-49C81A6B4141</case:calender>"
               +"  <case:escalation />"
			   +   Node.writeToString(XPath.getFirstMatch(".//*[local-name()='preassignment']", null, preassignments),true)
			   +"               </case:activity>"
    		   +"            </activity>"
    		   +"         </planactivities>";
    	
    	Document doc = new Document();
    	int reqNode=0;
    	try {
    		reqNode = doc.parseString(reqXML);
    	} catch (Exception e) {
    		// TODO Auto-generated catch block
    		e.printStackTrace();
    		logger.log(Severity.ERROR, "Exception Error Request" + e.getMessage());
    	} 
    	String[] parameterName = {"caseinstanceid"};
    	String[] parameterValue = {caseinstanceid};
    	SOAPRequestObject sro=new SOAPRequestObject ("http://schemas.cordys.com/casemanagement/execution/1.0","PlanActivities", parameterName, parameterValue) ;
    	
    	sro.addParameterAsXml(reqNode);
    	logger.log(Severity.ERROR,"Plan Activity: "+Node.writeToString(reqNode, true));
    	int response = sro.execute();
    	return Node.writeToString(response, true);
    }
	
	public static String getRandomStringUUID()
    {
        UUID uuid = UUID.randomUUID();
        String randomUUIDString = uuid.toString().toUpperCase();
        return randomUUIDString;
    }
	
	 public static String prepareCDATARequest(int XMLInput)
    {

     Document document=BSF.getXMLDocument();

		int resp=0;
		String stats="init";
	//	String strAppData="";int jsonNode=-1;String sroresp=null;
for(int i=0;i<10;i++)
{
	 String queryText = "select top 1 * from closeUwCase where Status ='false' ";
        QueryObject query = new QueryObject(queryText);
       
       
	   BusObjectIterator DataObjItr = query.getObjects();
		
		BusObject dataObjt=null;
		while(DataObjItr.hasMoreElements())
		{
		try {
		DataObjItr.elements(true);
dataObjt=DataObjItr.nextElement();
String CaseInstID = dataObjt.getStringProperty("CaseInstanceID");
int id_val=Integer.valueOf(dataObjt.getStringProperty("ID"));

		SOAPRequestObject sroObj =null;
		  
			 sroObj = new SOAPRequestObject("http://schemas.cordys.com/casemanagement/instanceadministration/1.0", "TerminateCaseInstance", new String[]{"caseinstanceid"}, new String[]{CaseInstID});
			
			 resp=sroObj.execute();

			
		/*	sroresp=Node.getData(XPath.getFirstMatch(".//*[local-name()='status']",null,resp));	
sroresp=sroresp.replaceAll("'", "");
			*/
DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
Calendar cal = Calendar.getInstance();

			DMLStatement dml = null;
			
		String queryTextUpd="update closeUWCase set ProcessTime='"+ dateFormat.format(cal.getTime())+"',ResponseData='"+Node.writeToString(resp,true)+"',Status='True' where ID='"+id_val+"'";
		dml = new DMLStatement(queryTextUpd);
		
		dml.execute();
		stats="Success";
			}catch(Exception e) {
				logger.error("Error while executing sro for method CloseUWCases "+e);
		stats="failed";
				}
 
		    }
	}
return stats;

    }

    public static BusObjectIterator<com.cica.uw.Util> getUtilObjects(com.cordys.cpc.bsf.query.Cursor cursor)
    {
        // TODO implement body
        return null;
    }

    public void onInsert()
    {
    }

    public void onUpdate()
    {
    }

    public void onDelete()
    {
    }
      public static int getAllCustomerData(int CombinedResponse) {

	String FinalNode="<CustomerPolicyData></CustomerPolicyData>";
	int response1[]= {},response2[]= {},response3[]= {},finNode=0;
	try {
		finNode = BSF.getXMLDocument().parseString(FinalNode);
	} catch (Exception e) {
		throw new BsfConstraintViolationException("Exception in CustomerPolicyData"+e.getMessage());
	}
	response1 = XPath.getMatchingNodes("//LSPAlphaData/AlphaList/Response0370AlphaList", null, CombinedResponse);
	response2 = XPath.getMatchingNodes("//ContractsAlpha_1/AlphaList/Response0370AlphaList", null, CombinedResponse);
	response3 = XPath.getMatchingNodes("//ContractsAlpha_2/AlphaList/Response0370AlphaList", null, CombinedResponse);
	
	for(int i=0;i<response1.length;i++) { //LSPAlphaData
		String CustDetail = "<CustomerDetails></CustomerDetails>";//
		String policy = "<PolicyNumber></PolicyNumber>";
		String DOB = "",PersonID = "",Address = "",State = "",City = "";
		String name = Node.getData(Node.getElement(response1[i], "Name"));
		if(name.equals("No Phonetic Match"))
			break;
		String Name = "<Name>"+name+"</Name>";
		if(Node.getData(Node.getElement(response1[i], "DOB"))!=null)
		DOB = "<DOB>"+Node.getData(Node.getElement(response1[i], "DOB"))+"</DOB>";
		if(Node.getData(Node.getElement(response1[i], "ClientNumber"))!=null)
		PersonID = "<PersonID>"+Node.getData(Node.getElement(response1[i], "ClientNumber"))+"</PersonID>";
		if(Node.getData(Node.getElement(response1[i], "Address"))!=null)
		Address  = "<Address>"+Node.getData(Node.getElement(response1[i], "Address"))+"</Address>";
		if(Node.getData(Node.getElement(response1[i], "State"))!=null)
		State = "<State>"+Node.getData(Node.getElement(response1[i], "State"))+"</State>";
		if(Node.getData(Node.getElement(response1[i], "City"))!=null)
		City = "<City>"+Node.getData(Node.getElement(response1[i], "City"))+"</City>";
		
		int customer = 0,policyno = 0,custname = 0,custdob = 0,custID = 0,custaddress = 0,custstate = 0,custcity=0;
		try {
			customer = BSF.getXMLDocument().parseString(CustDetail);
			policyno = BSF.getXMLDocument().parseString(policy);
			Node.appendToChildren(policyno, customer);
			custname = BSF.getXMLDocument().parseString(Name);
			Node.appendToChildren(custname, customer);
			custdob = BSF.getXMLDocument().parseString(DOB);
			Node.appendToChildren(custdob, customer);
			custID = BSF.getXMLDocument().parseString(PersonID);
			Node.appendToChildren(custID, customer);
			custaddress = BSF.getXMLDocument().parseString(Address);
			Node.appendToChildren(custaddress, customer);
			custstate = BSF.getXMLDocument().parseString(State);
			Node.appendToChildren(custstate, customer);
			custcity = BSF.getXMLDocument().parseString(City);
			Node.appendToChildren(custcity, customer);
			Node.appendToChildren(customer, finNode);
		}catch(Exception e)
		{
			throw new BsfConstraintViolationException("Exception in LSPAlphaData:"+e.getMessage());
		}
	}
	for(int i=0;i<response2.length;i++) { //ContractsAlpha_1
		String CustDetail = "<CustomerDetails></CustomerDetails>";
		String policData = "",userID = "",Fullname ="",DOB ="",State ="",City ="",FullAddress ="";
		Fullname = Node.getData(Node.getElement(response2[i], "FirstName"))+" "+Node.getData(Node.getElement(response2[i], "MiddleName"))+" "+Node.getData(Node.getElement(response2[i], "LastName"));
		int insuredpolicy = Node.getElement(response2[i], "IsInsuredPolicyList");
		if(Node.getData(Node.getFirstChild(insuredpolicy))!=null)
		policData = Node.getData(Node.getFirstChild(insuredpolicy));
		int IDlist = Node.getElement(response2[i], "IsOwnerIdList");
		if(Node.getData(Node.getFirstChild(IDlist))!=null)
		userID = Node.getData(Node.getFirstChild(IDlist)); 
		FullAddress = Node.getData(Node.getElement(response2[i], "City"))+" "+Node.getData(Node.getElement(response2[i], "State"));

		String policy = "<PolicyNumber>"+policData+"</PolicyNumber>";//
		String Name = "<Name>"+Fullname+"</Name>";
		if(Node.getData(Node.getElement(response2[i], "BirthMonthYear"))!=null)
		DOB = "<DOB>"+Node.getData(Node.getElement(response2[i], "BirthMonthYear"))+"</DOB>";
		String PersonID = "<PersonID>"+userID+"</PersonID>";
		String Address  = "<Address>"+FullAddress+"</Address>";
		if(Node.getData(Node.getElement(response2[i], "State"))!=null)
		State = "<State>"+Node.getData(Node.getElement(response2[i], "State"))+"</State>";
		if(Node.getData(Node.getElement(response2[i], "City"))!=null)
		City = "<City>"+Node.getData(Node.getElement(response2[i], "City"))+"</City>";
		
		int customer = 0,policyno = 0,custname = 0,custdob = 0,custID = 0,custaddress = 0,custstate = 0,custcity=0;
		try {
			customer = BSF.getXMLDocument().parseString(CustDetail);
			policyno = BSF.getXMLDocument().parseString(policy);
			Node.appendToChildren(policyno, customer);
			custname = BSF.getXMLDocument().parseString(Name);
			Node.appendToChildren(custname, customer);
			custdob = BSF.getXMLDocument().parseString(DOB);
			Node.appendToChildren(custdob, customer);
			custID = BSF.getXMLDocument().parseString(PersonID);
			Node.appendToChildren(custID, customer);
			custaddress = BSF.getXMLDocument().parseString(Address);
			Node.appendToChildren(custaddress, customer);
			custstate = BSF.getXMLDocument().parseString(State);
			Node.appendToChildren(custstate, customer);
			custcity = BSF.getXMLDocument().parseString(City);
			Node.appendToChildren(custcity, customer);
			Node.appendToChildren(customer, finNode);
		}catch(Exception e)
		{
			throw new BsfConstraintViolationException("Exception in ContractsAlpha_1:"+e.getMessage());
		}
	}
	for(int i=0;i<response3.length;i++) { //ContractsAlpha_2
		String CustDetail = "<CustomerDetails></CustomerDetails>";
		String policData = "",userID = "",Fullname="",FullAddress ="",DOB ="",State ="",City ="";
		Fullname = Node.getData(Node.getElement(response3[i], "FirstName"))+" "+Node.getData(Node.getElement(response3[i], "MiddleName"))+" "+Node.getData(Node.getElement(response3[i], "LastName"));
		int insuredpolicy = Node.getElement(response3[i], "IsInsuredPolicyList");
		if(Node.getData(Node.getFirstChild(insuredpolicy))!=null)
		policData = Node.getData(Node.getFirstChild(insuredpolicy));
		int IDlist = Node.getElement(response3[i], "IsOwnerIdList");
		if(Node.getData(Node.getFirstChild(IDlist))!=null)
		userID = Node.getData(Node.getFirstChild(IDlist)); 
		FullAddress = Node.getData(Node.getElement(response3[i], "City"))+" "+Node.getData(Node.getElement(response3[i], "State"));

		String policy = "<PolicyNumber>"+policData+"</PolicyNumber>";//
		String Name = "<Name>"+Fullname+"</Name>";
		if(Node.getData(Node.getElement(response3[i], "BirthMonthYear"))!=null)
		DOB = "<DOB>"+Node.getData(Node.getElement(response3[i], "BirthMonthYear"))+"</DOB>";
		String PersonID = "<PersonID>"+userID+"</PersonID>";
		String Address  = "<Address>"+FullAddress+"</Address>";
		if(Node.getData(Node.getElement(response3[i], "State"))!=null)
		State = "<State>"+Node.getData(Node.getElement(response3[i], "State"))+"</State>";
		if(Node.getData(Node.getElement(response3[i], "City"))!=null)
		City = "<City>"+Node.getData(Node.getElement(response3[i], "City"))+"</City>";
		
		int customer = 0,policyno = 0,custname = 0,custdob = 0,custID = 0,custaddress = 0,custstate = 0,custcity=0;
		try {
			customer = BSF.getXMLDocument().parseString(CustDetail);
			policyno = BSF.getXMLDocument().parseString(policy);
			Node.appendToChildren(policyno, customer);
			custname = BSF.getXMLDocument().parseString(Name);
			Node.appendToChildren(custname, customer);
			custdob = BSF.getXMLDocument().parseString(DOB);
			Node.appendToChildren(custdob, customer);
			custID = BSF.getXMLDocument().parseString(PersonID);
			Node.appendToChildren(custID, customer);
			custaddress = BSF.getXMLDocument().parseString(Address);
			Node.appendToChildren(custaddress, customer);
			custstate = BSF.getXMLDocument().parseString(State);
			Node.appendToChildren(custstate, customer);
			custcity = BSF.getXMLDocument().parseString(City);
			Node.appendToChildren(custcity, customer);
			Node.appendToChildren(customer, finNode);
		}catch(Exception e)
		{
			throw new BsfConstraintViolationException("Exception in ContractsAlpha_2:"+e.getMessage());
		}
	}
	return finNode;
    
    }
public static int getPlanActivityParam(String activity, String activityName,String humanTaskModelId, String subject, String assignee, String principal, String assignToUser, String dueDate, String deliveryModelName, String targetType, String priority, int preassignments) {
	
	int reqNode=0,instanceNode=0;
	String reqXML="<planactivities xmlns=\"http://schemas.cordys.com/casemanagement/execution/1.0\">"
			+"            <activity id=\""+activity+"\" name=\""+activityName+"\">"
			+"               <case:activity xmlns:proc=\"http://schemas.cordys.com/1.0/xforms/processapi\" xmlns:ns14=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\" xmlns:ns15=\"http://schemas.cordys.com/dropdown_table\" xmlns:ns16=\"http://schemas.datacontract.org/2004/07/JSONDataParse\" xmlns:ns17=\"Rule\" xmlns:ns10=\"http://schemas.cordys.com/1.0/xmlstore\" xmlns:ns11=\"http://schemas.cordys.com/cws/1.0\" xmlns:ns12=\"http://tempuri.org/\" xmlns:ns9=\"http://schemas.cordys.com/default_005056A2-27FA-A1EA-8AD4-C2BA75DC4154\" xmlns:ns13=\"http://schemas.datacontract.org/2004/07/CTGService\" xmlns:ns7=\"http://schemas.cordys.com/General/ClientAttributes/\" xmlns:ns8=\"http://schemas.cordys.com/ClaimsClarifyDBMetadata\" xmlns:ns5=\"http://schemas.cordys.com/ClaimsDBMetaData\" xmlns:ns6=\"http://schemas.cordys.com/General/1.0/\" xmlns:ns3=\"http://schemas.cordys.com/bpm/instance/1.0\" xmlns:ns4=\"http://schemas.cordys.com/default\" xmlns:ns1=\"http://schemas.cordys.com/1.0/xforms/processapi\" xmlns:ns2=\"http://schemas.cordys.com/\" xmlns:sm=\"http://www.w3.org/2005/07/scxml\" xmlns:case=\"http://schemas.cordys.com/casemanagement/1.0\" xmlns=\"\""
			+"					id=\""+activity+"\" name=\""+activityName+"\" type=\"HUMANTASK\">"
			+"                  <case:implementation>"
			+"                     <HumanInteraction xmlns=\"http://schemas.cordys.com/notification/workflow/1.0\">"
			+"						  <HumanTaskModelId>"+humanTaskModelId+"</HumanTaskModelId>"
			+"                    	  <Subject>"+activityName+"</Subject>"
			+"						 <Priority source=\"asInMainCase\">"+priority+"</Priority>"
			+"                        <SendTo>"
			+"                           <Target type=\"role\">"
			+"                              <Assignee dynamic=\"false\">"+assignee+"</Assignee>"
			+"                           </Target>";
	
			reqXML +="                        </SendTo>";
		if(dueDate != null && !dueDate.isEmpty())
		{
	    	reqXML +="  <DueDate isDuration=\"false\" dynamic=\"false\">"+dueDate+"</DueDate>";
		}
			reqXML += "</HumanInteraction>"
			+"                  </case:implementation>"
			+"<case:messages>"
			+"    <case:input>"
			+"<case:message ns=\"http://schemas.cordys.com/1.0/xforms/processapi\" name=\""+deliveryModelName+"\"/>"
			+"	  </case:input>"
			+"</case:messages>"
			+"<case:associatedevents/>"
			+"<case:duedate type=\"duration\" dynamic=\"false\"></case:duedate>"
			+"<case:calender dynamic=\"false\" calculationEndsOn=\"endOfBusinessDay\" includeStartDay=\"false\">005056A2-27FA-A1E9-BDBA-043AAE3C0151</case:calender>"
			+   Node.writeToString(XPath.getFirstMatch(".//*[local-name()='preassignment']", null, preassignments),true)
			+"               </case:activity>"
			+"            </activity>"
			+"         </planactivities>";
			try {
				reqNode = BSF.getXMLDocument().parseString(reqXML);
			}catch(Exception e) {
				throw new BsfConstraintViolationException("Exception custom plan activity"+e.getMessage());
			}
			
	return reqNode ;
}
}
