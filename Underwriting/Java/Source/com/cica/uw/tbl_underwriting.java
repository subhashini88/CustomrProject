/*
  This class has been generated by the Code Generator
*/

package com.cica.uw;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.eibus.util.logger.CordysLogger;
import com.eibus.util.logger.Severity;
import com.cordys.cpc.bsf.busobject.DMLStatement;


public class tbl_underwriting extends tbl_underwritingBase
{
    public tbl_underwriting()
    {
        this((BusObjectConfig)null);
    }

    public tbl_underwriting(BusObjectConfig config)
    {
        super(config);
    }

    public static BusObjectIterator<com.cica.uw.tbl_underwriting> GetUnderwritingAutoDecisionApproved()
    {
String queryText = "select company_policy,policy_number,task_id,decision from tbl_underwriting where AutoDecision = 'Approved' and task_id is not  null and received_date >=  '2018-12-03 00:00:00.000' ";
        QueryObject query = new QueryObject(queryText);
        query.setResultClass(tbl_underwriting.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.cica.uw.tbl_underwriting> GetUnderwritingCloseOutDateRecords()
    {
	    String queryText = "select company_code,company_policy,task_id,policy_number,jet_result,CloseOutDate,received_date from tbl_underwriting where  decision = 'None' and  (closeoutdate = CONVERT(datetime, convert(varchar(10), GETDATE() ,120), 120) or closeoutdate = CONVERT(datetime, convert(varchar(10), GETDATE()-1 ,120), 120))";
        QueryObject query = new QueryObject(queryText);
        query.setResultClass(tbl_underwriting.class);
        return query.getObjects();
    }

    public static com.cica.uw.tbl_underwriting GetUnderwritingObjectForTaskId(String TaskId)
    {
String queryText = "select policy_coverage,objid,company_policy,company_code,policy_number,product_description,site_id,first_name,middle_name,last_name,address1,address2,city,state_code,issue_state_code,zipcode,dob,task_id,application_date,lang_pref_indicator,SellingLanguage,annual_prem_amt,decision_date,multiple_lapsers,sfi,payment_method,decision,payment_mode,hch,policy_status,customer_phone,application_date,signer,RxScore,RxDecision,RxStatus,RxRulesDecision,market_code,agent_code_1,product_description,issue_state_code,eAgent_indicator,form_number,payment_mode,quarterly_prem_amt,monthly_prem_amt,semiannual_prem_amt,annual_prem_amt,height,weight,occupation,benefit_amount,plan_description,application_date,CloseOutDate,received_date,decline_reason,decline_reason_2,other_reason1,other_reason2,other_reason3,other_reason4,other_reason5,other_source1,other_source2,other_source3,other_source4,other_source5,EP,BP,DL_Number,gender,Tobacco_Smoker,WorkerComp,NYState,PhoneType,TimetoContact,CellNumber,Landline,Email,SelfEmployed,EmployerName,annual_income,EmpAddress,EmpCity,EmpState,EmpZip,EmpPhoneNumber,VendorPHICount,VendorAPSCount,VendorMVRCount,totalCountofNonVendorSubmitted,state_code,SpouseSigner,SpouseRxDecision,SpouseRxRulesDecision,SpouseRxScore,SpouseRxStatus,PrimaryRxComment,SpouseRxComment,PrimaryRxSeverity,SpouseRxSeverity,PrimaryRxFlag,SpouseRxFlag,letter_id,comp_unans_medical_question from tbl_underwriting where task_id = :task_id";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("task_id", "tbl_underwriting.task_id", QueryObject.PARAM_STRING, TaskId);//NOPMD
        query.setResultClass(tbl_underwriting.class);
        return (tbl_underwriting)query.getObject();
    }

    public static com.cica.uw.tbl_underwriting GetUnderwritingRecordForPolicyNumber(String PolicyNumber)
    {
String queryText = "select policy_number,site_id,issue_state_code,product_description,form_number,company_code,first_name,middle_name,last_name,lang_pref_indicator,issue_state_code,dob,state_code,gender,company_code,(CASE when company_code like '%L' then 'Life' when company_code like '%S' then 'Health' else company_code END) as LOB from tbl_underwriting where policy_number = :policy_number";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("policy_number", "tbl_underwriting.policy_number", QueryObject.PARAM_STRING, PolicyNumber);//NOPMD
        query.setResultClass(tbl_underwriting.class);
        return (tbl_underwriting)query.getObject();
    }

    public static BusObjectIterator<com.cica.uw.tbl_underwriting> GetUnderwritingTracRejectedDecision()
    {
String queryText = "select objid,company_policy,policy_number,task_id,decision from tbl_underwriting where AutoDecision = 'KickedOut' and task_id is not  null and received_date >=  '2018-12-03 00:00:00.000' ";
        QueryObject query = new QueryObject(queryText);
        query.setResultClass(tbl_underwriting.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.cica.uw.tbl_underwriting> GetUnprocessedUnderwritingObjects()
    {
String queryText = "select  top 500 objid,company_policy,policy_number,issue_state_code,site_id,first_name,middle_name,last_name,product_description,lang_pref_indicator,annual_prem_amt,application_date,received_date,site_id,address1,city,state_code,zipcode,dob,multiple_lapsers,hch,company_code,jet_result,gender,occupation,height,weight,decision,sfi,eAgent_indicator,(CASE when company_code like '%L' then 'Life' when company_code like '%S' then 'Health' else company_code END) as LOB from tbl_underwriting where task_id is null";
        QueryObject query = new QueryObject(queryText);
        query.setResultClass(tbl_underwriting.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.cica.uw.tbl_underwriting> getUnderwritingCaseIDForPolicyNo(String policyNo, com.cordys.cpc.bsf.query.Cursor cursor)
    {
		//String queryText = "select objid,task_id,decision from tbl_underwriting where policy_number=:policyNo";
String queryText = "select * from tbl_underwriting where policy_number=:policyNo";
        QueryObject query = new QueryObject(queryText);
		query.addParameter("policyNo", "tbl_underwriting.policy_number", QueryObject.PARAM_STRING, policyNo);
        query.setResultClass(tbl_underwriting.class);
        query.setCursor(cursor);
        return query.getObjects();
    }
	public static com.cica.uw.tbl_underwriting updateUnderwritingTaskIdNULL(String companyPolicy)
    {
        DMLStatement dml = new DMLStatement("update tbl_underwriting set task_id=NULL where company_policy=:companyPolicy");
		dml.addParameter("companyPolicy", "tbl_underwriting.company_policy", companyPolicy);
		dml.executeDML();
		return null;
    }

}
