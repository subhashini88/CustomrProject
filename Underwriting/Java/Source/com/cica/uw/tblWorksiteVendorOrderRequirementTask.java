/*
  This class has been generated by the Code Generator
*/

package com.cica.uw;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.busobject.DMLStatement;
import com.cordys.cpc.bsf.busobject.BSF;
import java.util.*;
public class tblWorksiteVendorOrderRequirementTask extends tblWorksiteVendorOrderRequirementTaskBase
{
    public tblWorksiteVendorOrderRequirementTask()
    {
        this((BusObjectConfig)null);
    }

    public tblWorksiteVendorOrderRequirementTask(BusObjectConfig config)
    {
        super(config);
    }

    public static BusObjectIterator<com.cica.uw.tblWorksiteVendorOrderRequirementTask> GetWKSVendorOrderDetailsby_CaseID_StatusNew(String CaseID, String Status, String OrderNo, String task_ID)
    {
       String queryText = "select * from \"tblWorksiteVendorOrderRequirementTask\" where \"case_id\" = '"+CaseID+"' and CONVERT(VARCHAR(MAX), RequirementStatus) = '"+Status+"'";
			if(OrderNo != null && !OrderNo.trim().isEmpty() && (!OrderNo.equalsIgnoreCase("PARAMETER"))) 
			queryText=queryText+"and OrderedRequirement='"+OrderNo+"'";
			if(task_ID != null && !task_ID.trim().isEmpty() && (!task_ID.equalsIgnoreCase("PARAMETER"))) 
			queryText=queryText+"and task_id='"+task_ID+"'";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("case_id", "tblWorksiteVendorOrderRequirementTask.case_id", QueryObject.PARAM_STRING, CaseID);//NOPMD
		query.addParameter("RequirementStatus", "tblWorksiteVendorOrderRequirementTask.RequirementStatus", QueryObject.PARAM_STRING, Status);
		query.addParameter("OrderedRequirement", "tblWorksiteVendorOrderRequirementTask.OrderedRequirement", QueryObject.PARAM_STRING, OrderNo);
		query.addParameter("task_id", "tblWorksiteVendorOrderRequirementTask.task_id", QueryObject.PARAM_STRING, task_ID);
        query.setResultClass(tblWorksiteVendorOrderRequirementTask.class);
        return query.getObjects();
    }

    public static int deleteWKSVendorOrderUsingTaskID_OrderNoNew(String taskID, String orderNO)
    {
       DMLStatement dml = null;
		String queryText="delete from tblWorksiteVendorOrderRequirementTask where task_id='"+taskID+"' and OrderedRequirement='"+orderNO+"' and CONVERT(VARCHAR(MAX), RequirementStatus) ='Draft'";
		dml = new DMLStatement(queryText);
		dml.execute();
		return (int)1;
    }

    public static BusObjectIterator<com.cica.uw.tblWorksiteVendorOrderRequirementTask> getWKSVendorOrderDetailsby_CaseIDNew(String CaseID)
    {
        String queryText = "select * from \"tblWorksiteVendorOrderRequirementTask\" where \"case_id\" = '"+CaseID+"' ";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("case_id", "tblWorksiteVendorOrderRequirementTask.case_id", QueryObject.PARAM_STRING, CaseID);//NOPMD
        query.setResultClass(tblWorksiteVendorOrderRequirementTask.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.cica.uw.tblWorksiteVendorOrderRequirementTask> getWKSVendorOrderDetailsby_CaseNTaskIDNew(String CaseID, String task_ID)
    {
        String queryText = "select * from \"tblWorksiteVendorOrderRequirementTask\" where \"case_id\" = '"+CaseID+"' and \"task_id\" = '"+task_ID+"' ";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("case_id", "tblWorksiteVendorOrderRequirementTask.case_id", QueryObject.PARAM_STRING, CaseID);//NOPMD
        query.addParameter("task_id", "tblWorksiteVendorOrderRequirementTask.task_id", QueryObject.PARAM_STRING, task_ID);//NOPMD
        query.setResultClass(tblWorksiteVendorOrderRequirementTask.class);
        return query.getObjects();
    }
protected void onBeforeInsert()
{
String userDN = BSF.getUser();
this.setCreatedOn(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60 * 1000)));
this.setCreatedBy(userDN.substring(3,userDN.indexOf(",")));
this.setUpdatedOn(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60 * 1000)));
this.setUpdatedBy(userDN.substring(3,userDN.indexOf(",")));
}
protected void onBeforeUpdate()
{
String userDN = BSF.getUser();
this.setUpdatedOn(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60 * 1000)));
this.setUpdatedBy(userDN.substring(3,userDN.indexOf(",")));
}

}
